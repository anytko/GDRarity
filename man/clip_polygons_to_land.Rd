% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clip_polygons_to_land.r
\name{clip_polygons_to_land}
\alias{clip_polygons_to_land}
\title{Clip species range polygons to land boundaries}
\usage{
clip_polygons_to_land(convex_hulls, continent_sf)
}
\arguments{
\item{convex_hulls}{A nested list of \code{sf} polygon objects representing the convex hulls
of species ranges. Typically generated using \code{\link[=get_range_convex_hulls]{get_range_convex_hulls()}}.}

\item{continent_sf}{An \code{sf} object containing continent polygons (e.g., from Natural Earth
GeoJSON or shapefiles). Coordinate reference systems will be matched automatically}
}
\value{
A nested list of \code{sf} polygon objects representing the clipped species ranges.
Each top-level list element corresponds to a species; each sublist contains one or
more clipped polygons for that species.
}
\description{
This function uses a continent GeoJSON or shape file (.shp & .shx) file to clip range polygons to land boundaries.
}
\details{
The function sets the CRS of each input polygon to match that of \code{continent_sf} using
\code{sf::st_crs()}, then uses \code{rmapshaper::ms_clip()} to perform the clipping operation.
Invalid geometries are fixed with \code{sf::st_make_valid()}.
If a species range does not intersect land (i.e., an entirely oceanic polygon), it is
removed from the output. Errors during clipping are caught and silently ignored.
}
\examples{
# Generate a test dataframe with species Abies cephalonica
test_data <- data.frame(species_name = c("Acer_campestre"))
# Retrieve the unclipped range convex hulls 
unclipped_hulls <- get_range_convex_hulls(test_data)
# Get continent data from a GeoJSON file
continent_sf_example <- get_continent_sf()
# Clip the range polygons to continent bounds 
clipped_polygons <- clip_polygons_to_land(convex_hulls = unclipped_hulls, continent_sf = continent_sf_example)
print(clipped_polygons)
}
