% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define_custom_k_ranges.r
\name{define_custom_k_ranges}
\alias{define_custom_k_ranges}
\title{Define Custom K Ranges}
\usage{
define_custom_k_ranges(data, variable, k)
}
\arguments{
\item{data}{A data frame containing the variable for clustering.}

\item{variable}{The name of the variable for clustering. Use the name of the column in "".}

\item{k}{The number of clusters to be used in k-means clustering.}
}
\value{
A list containing: A data frame with an additional column indicating the cluster label for each observation.
}
\description{
Perform k-means clustering on a variable and define custom ranges based on cluster centers.
}
\details{
This function performs k-means clustering on a variable in the provided data frame and defines custom ranges based on the cluster centers. It returns a list containing the modified data frame with an additional column indicating the cluster label for each observation, and a list of custom ranges based on the cluster centers.
}
\examples{

Create a dataframe of maple, ash, and pine species with range size, evolutionary distinctiveness, and functional distinctiveness values

species_names <- c("Abies_alba", "Abies_grandis", "Abies_nordmanniana", "Acer_campestre", "Acer_monspessulanum", "Acer_negundo", "Acer_opalus", "Acer_platanoides", "Acer_pseudoplatanus", "Acer_saccharinum", "Fraxinus_angustifolia", "Fraxinus_excelsior", "Fraxinus_ornus", "Fraxinus_pennsylvanica", "Pinus_banksiana", "Pinus_cembra", "Pinus_nigra", "Pinus_pinaster", "Pinus_pinea", "Pinus_ponderosa", "Pinus_strobus", "Pinus_sylvestris", "Pinus_uncinata")

FD_values <- runif(min = -2, max = 2, n=23)

range_values <- runif(min = -2, max = 2, n=23)

mean_evol_dist_values <- runif(min = -2, max = 2, n=23)

forest_data <- data.frame(species_name = species_names, fun_dist = FD_values, range_size = range_values, mean_evol_dist = mean_evol_dist_values)

Calculate the range of each k cluster

k_ranges <- define_custom_ranges(data = forest_data, variable = "range_size", k=8)

print(k_ranges)

}
